version: '3'
services:
    # Cria o serviço procurando o dockerfile
    # O context faz com que a busca comece
    # apartir daquele ponto
    # Image da o nome da imagem
    # Networks é importante para informar qual rede
    # o serviço fará parte
    # Depends_on dita a ordem de deploy dos containers
  nginx:
    build:
      dockerfile: ./docker/nginx.dockerfile
      context: .
    image: dougasq/nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:433"
    networks: 
      - production-network
    depends_on:
      - "node1" 
      - "node2" 
      - "node3" 

  mongodb:
    image: mongo
    networks: 
      - production-network

  node1:
    build:
      dockerfile: ./docker/alura-books.dockerfile
      context: .
    image: dougasq/alura-books
    container_name: alura-books1
    ports:
      - "3000"
    networks:
      - production-network
    depends_on:
      - "mongodb" 

  node2:
    build:
      dockerfile: ./docker/alura-books.dockerfile
      context: .
    image: dougasq/alura-books
    container_name: alura-books2
    ports:
      - "3000"
    networks:
      - production-network
    depends_on:
      - "mongodb" 

  node3:
    build:
      dockerfile: ./docker/alura-books.dockerfile
      context: .
    image: dougasq/alura-books
    container_name: alura-books3
    ports:
      - "3000"
    networks:
      - production-network
    depends_on:
      - "mongodb" 

networks:
  production-network:
    driver: bridge
